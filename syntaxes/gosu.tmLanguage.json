{
  "name": "GOSU",
  "scopeName": "source.gosu",
  "fileTypes": [
    "gs",
    "gsx",
    "gst",
    "gsp"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#types"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#properties"
    },
    {
      "include": "#annotations"
    },
    {
      "include": "#blocks"
    },
    {
      "include": "#enhancements"
    },
    {
      "include": "#delegates"
    },
    {
      "include": "#featureLiterals"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.gosu",
          "begin": "//",
          "end": "$",
          "patterns": [
            {
              "name": "punctuation.definition.comment.gosu",
              "match": "//"
            }
          ]
        },
        {
          "name": "comment.block.gosu",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "punctuation.definition.comment.begin.gosu",
              "match": "/\\*"
            },
            {
              "name": "punctuation.definition.comment.end.gosu",
              "match": "\\*/"
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.gosu",
          "match": "\\b(if|else|switch|case|default|while|for|foreach|do|break|continue|return|try|catch|finally|throw|using|assert)\\b"
        },
        {
          "name": "keyword.declaration.gosu",
          "match": "\\b(class|interface|enum|enhancement|structure|delegate|implements|extends|represents)\\b"
        },
        {
          "name": "keyword.modifier.gosu",
          "match": "\\b(private|internal|protected|public|static|abstract|override|final|transient|readonly)\\b"
        },
        {
          "name": "keyword.other.gosu",
          "match": "\\b(package|uses|var|function|property|get|set|construct|this|super|new|in|typeis|typeas|typeof|statictypeof)\\b"
        },
        {
          "name": "keyword.operator.word.gosu",
          "match": "\\b(and|or|not|as)\\b"
        },
        {
          "name": "constant.language.gosu",
          "match": "\\b(null|true|false|NaN|Infinity)\\b"
        },
        {
          "name": "storage.type.primitive.gosu",
          "match": "\\b(void|boolean|byte|char|short|int|long|float|double|String|Object|block)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.gosu",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.gosu",
              "match": "\\\\."
            },
            {
              "name": "constant.other.placeholder.gosu",
              "match": "\\$\\{[^}]*\\}"
            }
          ]
        },
        {
          "name": "string.quoted.single.gosu",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.gosu",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.gosu",
          "match": "\\b0[xX][0-9a-fA-F]+[sSlL]?\\b"
        },
        {
          "name": "constant.numeric.binary.gosu",
          "match": "\\b0[bB][01]+[sSlL]?\\b"
        },
        {
          "name": "constant.numeric.octal.gosu",
          "match": "\\b0[0-7]+[sSlL]?\\b"
        },
        {
          "name": "constant.numeric.special.gosu",
          "match": "\\b(NaN|Infinity)\\b"
        },
        {
          "name": "constant.numeric.decimal.float.gosu",
          "match": "\\b([0-9]+\\.[0-9]*([eE][+-]?[0-9]+)?[fFdDbB][dD]?|\\.[0-9]+([eE][+-]?[0-9]+)?[fFdDbB][dD]?)\\b"
        },
        {
          "name": "constant.numeric.decimal.integer.gosu",
          "match": "\\b[0-9]+([eE][+-]?[0-9]+)?[sSlLbBiI]?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.gosu",
          "match": "\\+|\\-|\\*|/|%|\\+\\+|\\-\\-|\\?\\+|\\?\\-|!\\+|!\\-|\\?\\*|!\\*|\\?/|\\?%"
        },
        {
          "name": "keyword.operator.assignment.gosu",
          "match": "=|\\+=|\\-=|\\*=|/=|%=|&=|\\|=|\\^=|&&=|\\|\\|=|<<=|>>=|>>>="
        },
        {
          "name": "keyword.operator.comparison.gosu",
          "match": "==|!=|===|!==|<|>|<=|>="
        },
        {
          "name": "keyword.operator.logical.gosu",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.bitwise.gosu",
          "match": "&|\\||\\^|~|<<|>>|>>>"
        },
        {
          "name": "keyword.operator.interval.gosu",
          "match": "\\.\\.|\\|\\.\\.|\\.\\.\\||\\|\\.\\.\\.\\|"
        },
        {
          "name": "keyword.operator.nullsafe.gosu",
          "match": "\\?\\.|\\.\\*|\\?\\[|\\?:"
        },
        {
          "name": "keyword.operator.other.gosu",
          "match": "\\?|:|\\.|\\->|#|\\\\|"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.gosu",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "storage.type.generic.gosu",
          "begin": "<",
          "end": ">",
          "patterns": [
            {
              "include": "#types"
            }
          ]
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.gosu",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        },
        {
          "name": "storage.type.function.gosu",
          "match": "\\bfunction\\b"
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "name": "entity.name.property.gosu",
          "match": "\\b(property)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": {
              "name": "storage.type.property.gosu"
            },
            "2": {
              "name": "entity.name.property.gosu"
            }
          }
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "meta.annotation.gosu",
          "match": "@[a-zA-Z_][a-zA-Z0-9_]*(\\.[a-zA-Z_][a-zA-Z0-9_]*)*",
          "captures": {
            "0": {
              "name": "storage.type.annotation.gosu"
            }
          }
        }
      ]
    },
    "blocks": {
      "patterns": [
        {
          "name": "meta.block.gosu",
          "begin": "\\\\",
          "beginCaptures": {
            "0": {
              "name": "keyword.operator.block.gosu"
            }
          },
          "patterns": [
            {
              "include": "#identifiers"
            },
            {
              "include": "#operators"
            }
          ],
          "end": "->",
          "endCaptures": {
            "0": {
              "name": "keyword.operator.lambda.gosu"
            }
          }
        },
        {
          "name": "meta.block.parameters.gosu",
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.gosu"
            }
          },
          "patterns": [
            {
              "include": "#identifiers"
            },
            {
              "include": "#types"
            },
            {
              "include": "#operators"
            }
          ],
          "end": "\\)\\s*->",
          "endCaptures": {
            "0": {
              "name": "keyword.operator.lambda.gosu"
            }
          }
        }
      ]
    },
    "enhancements": {
      "patterns": [
        {
          "name": "meta.enhancement.gosu",
          "begin": "\\b(enhancement)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.enhancement.gosu"
            },
            "2": {
              "name": "entity.name.type.enhancement.gosu"
            },
            "3": {
              "name": "punctuation.separator.gosu"
            }
          },
          "patterns": [
            {
              "include": "#types"
            }
          ],
          "end": "\\{"
        }
      ]
    },
    "delegates": {
      "patterns": [
        {
          "name": "meta.delegate.gosu",
          "begin": "\\b(delegate)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(:)?",
          "beginCaptures": {
            "1": {
              "name": "keyword.declaration.delegate.gosu"
            },
            "2": {
              "name": "entity.name.type.delegate.gosu"
            },
            "3": {
              "name": "punctuation.separator.gosu"
            }
          },
          "patterns": [
            {
              "include": "#types"
            }
          ],
          "end": "\\brepresents\\b"
        }
      ]
    },
    "featureLiterals": {
      "patterns": [
        {
          "name": "meta.feature.literal.gosu",
          "match": "#([a-zA-Z_][a-zA-Z0-9_]*|construct)",
          "captures": {
            "0": {
              "name": "constant.other.feature.gosu"
            }
          }
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.gosu",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
