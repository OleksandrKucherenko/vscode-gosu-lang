name: Publish Extension

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        default: minor
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check for skip CI
        if: github.event_name != 'workflow_dispatch'
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ \[skip\ ci\]|\[ci\ skip\]|\[no\ ci\]|\[skip\ actions\]|\[actions\ skip\]|\[skip\ publish\]|\[publish\ skip\] ]]; then
            echo "ðŸš« Manual publishing skipped due to commit message"
            echo "Commit message: ${{ github.event.head_commit.message }}"
            exit 78
          fi

      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.19.3"
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci --prefer-offline --no-audit

      - name: Build Extension
        run: |
          npm run build

      - name: Run Tests with Coverage
        run: |
          npm run test:coverage

      - name: Check Coverage Thresholds
        run: |
          node scripts/check-coverage.js

      - name: Setup Github Actions # allow use of `git push`
        run: | # shell
          git config --global user.name "Oleksandr K."
          git config --global user.email "${{ secrets.AUTHOR_EMAIL }}"
          git add .
          git diff-index --quiet HEAD || git commit -m "Sync Github Actions"

      - name: Package Extension # `.vsix` file
        run: | # shell
          npx vsce package ${{ github.event.inputs.version }}
          git push --follow-tags
          echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_ENV"

      - name: Generate Release # create release page on github with `.vsix` file
        run: | # shell
          gh release create v$VERSION --generate-notes gosu-language-support-$VERSION.vsix
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Publish Release # upload to Extension Marketplace
        run: | # shell
          npx vsce publish --packagePath gosu-language-support-$VERSION.vsix
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
